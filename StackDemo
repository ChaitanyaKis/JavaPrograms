import java.util.Stack;
import java.util.Scanner;

public class StackDemo {
    public static void main(String[] args) {
        Stack<Integer> stack = new Stack<>();
        Scanner scanner = new Scanner(System.in);
        int choice;

        do {
            System.out.println("\n=== Stack Operations ===");
            System.out.println("1. Push");
            System.out.println("2. Pop");
            System.out.println("3. Peek");
            System.out.println("4. Check if Empty");
            System.out.println("5. Search");
            System.out.println("6. Display Stack");
            System.out.println("0. Exit");
            System.out.print("Enter your choice: ");
            
            choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    System.out.print("Enter number to push: ");
                    int num = scanner.nextInt();
                    stack.push(num);
                    System.out.println(num + " pushed to stack.");
                    break;

                case 2:
                    if (!stack.isEmpty()) {
                        int removed = stack.pop();
                        System.out.println("Popped: " + removed);
                    } else {
                        System.out.println("Stack is empty!");
                    }
                    break;

                case 3:
                    if (!stack.isEmpty()) {
                        System.out.println("Top element: " + stack.peek());
                    } else {
                        System.out.println("Stack is empty!");
                    }
                    break;

                case 4:
                    System.out.println(stack.isEmpty() ? "Stack is empty!" : "Stack is not empty.");
                    break;

                case 5:
                    System.out.print("Enter number to search: ");
                    int search = scanner.nextInt();
                    int position = stack.search(search);
                    if (position == -1) {
                        System.out.println(search + " not found.");
                    } else {
                        System.out.println(search + " found at position " + position + " from top.");
                    }
                    break;

                case 6:
                    System.out.println("Stack elements: " + stack);
                    break;

                case 0:
                    System.out.println("Exiting...");
                    break;

                default:
                    System.out.println("Invalid choice.");
            }
        } while (choice != 0);

        scanner.close();
    }
}
